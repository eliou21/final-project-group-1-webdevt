import React, { useState, useEffect } from 'react';

function EditRestaurant() {
  const [restaurants, setRestaurants] = useState([]);
  const [restaurantName, setRestaurantName] = useState('');
  const [updatedDescription, setUpdatedDescription] = useState('');
  const [updatedImage, setUpdatedImage] = useState(null);

  useEffect(() => {
    const storedRestaurants = JSON.parse(localStorage.getItem('restaurants')) || [
      { name: 'Wild Flour', location: 'BGC, Taguig', capacity: 22, tables: 13, description: 'Modern Filipino dining with a variety of international dishes.', image: '' },
      { name: 'Kenny Rogers', location: 'Makati, Metro Manila', capacity: 40, tables: 15, description: 'Famous for rotisserie chicken.', image: '' },
      { name: 'Kuya J', location: 'Quezon City, Metro Manila', capacity: 30, tables: 12, description: 'Serving Filipino comfort food.', image: '' },
      { name: 'Pizza Hut', location: 'Pasig, Metro Manila', capacity: 50, tables: 20, description: 'Global pizza chain.', image: '' },
    ];
    setRestaurants(storedRestaurants);
  }, []);

  const handleSubmit = (e) => {
    e.preventDefault();

    const updatedRestaurants = restaurants.map((restaurant) =>
      restaurant.name === restaurantName
        ? {
            ...restaurant,
            description: updatedDescription || restaurant.description,
            image: updatedImage || restaurant.image,
          }
        : restaurant
    );

    setRestaurants(updatedRestaurants);
    localStorage.setItem('restaurants', JSON.stringify(updatedRestaurants));

    alert(`Restaurant "${restaurantName}" updated successfully!`);

    // Reset form
    setRestaurantName('');
    setUpdatedDescription('');
    setUpdatedImage(null);
  };

  const handleImageChange = (e) => {
    const file = e.target.files[0];
    if (file) {
      const reader = new FileReader();
      reader.onloadend = () => {
        setUpdatedImage(reader.result);
      };
      reader.readAsDataURL(file);
    }
  };

  return (
    <div className="admin-container">
      <h1>Edit Restaurant</h1>
      <form onSubmit={handleSubmit}>
        <div className="form-group">
          <label>
            Select Restaurant:
            <select
              value={restaurantName}
              onChange={(e) => setRestaurantName(e.target.value)}
              required
            >
              <option value="">-- Select Restaurant --</option>
              {restaurants.map((restaurant, index) => (
                <option key={index} value={restaurant.name}>
                  {restaurant.name}
                </option>
              ))}
            </select>
          </label>
        </div>

        {restaurantName && (
          <>
            <div className="form-group">
              <label>
                Updated Description:
                <textarea
                  value={updatedDescription}
                  onChange={(e) => setUpdatedDescription(e.target.value)}
                ></textarea>
              </label>
            </div>

            <div className="form-group">
              <label>
                Updated Cover Image:
                <input type="file" accept="image/*" onChange={handleImageChange} />
              </label>
            </div>

            <button type="submit">Update Restaurant</button>
          </>
        )}
      </form>
    </div>
  );
}

export default EditRestaurant;
